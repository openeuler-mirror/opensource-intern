# Copyright (c) 2022 Huawei Technologies Co.,Ltd.
#
# openGauss is licensed under Mulan PSL v2.
# You can use this software according to the terms and conditions of the Mulan PSL v2.
# You may obtain a copy of Mulan PSL v2 at:
#
#          http://license.coscl.org.cn/MulanPSL2
#
# THIS SOFTWARE IS PROVIDED ON AN "AS IS" BASIS, WITHOUT WARRANTIES OF ANY KIND,
# EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT,
# MERCHANTABILITY OR FIT FOR A PARTICULAR PURPOSE.
# See the Mulan PSL v2 for more details.

# This file contains the metrics that need to scrape from multiple databases.
# Because the fetching result from different databases is different.


pg_class:
  name: pg_class
  desc: Postgres relation catalog info db level normal version
  query:
    - name: pg_class
      sql: |-
        SELECT CURRENT_CATALOG AS datname,(select nspname from pg_namespace where oid=relnamespace) as nspname,relname,relkind,relpages,reltuples,
          CASE WHEN relkind = 'i' THEN NULL ELSE pg_catalog.age(relfrozenxid64) END AS relage,pg_catalog.pg_relation_size(oid) AS relsize
        FROM pg_class
        WHERE relkind = 'r' and relname not like 'pg_%' and relname not like 'gs_%' and nspname not in ('information_schema', 'pg_catalog', 'snapshot', 'dbe_pldeveloper', 'db4ai')
        ORDER BY relpages DESC LIMIT 32;
      version: '>=0.0.0'
      timeout: 3
      ttl: 60
      status: enable
      dbRole: "primary"
    - name: pg_class
      sql: |-
        SELECT CURRENT_CATALOG AS datname,(select nspname from pg_namespace where oid=relnamespace) as nspname,relname,relkind,relpages,reltuples,
          CASE WHEN relkind = 'i' THEN NULL ELSE pg_catalog.age(relfrozenxid64) END AS relage,pg_catalog.pg_relation_size(oid) AS relsize
        FROM pg_class
        WHERE relkind = 'r' and relname not like 'pg_%' and relname not like 'gs_%' and nspname not in ('information_schema', 'pg_catalog', 'snapshot', 'dbe_pldeveloper', 'db4ai')
        ORDER BY relpages DESC LIMIT 32;
      version: '>=0.0.0'
      timeout: 3
      ttl: 60
      status: disable
      dbRole: "standby"
  metrics:
    - name: datname
      description: database name of this relation
      usage: LABEL
    - name: nspname
      description: schema name of this relation
      usage: LABEL
    - name: relname
      description: relation name of this relation
      usage: LABEL
    - name: relkind
      description: relation type r-table i-index s-sequence m-mview t-toast
      usage: LABEL
    - name: relpages
      description: exact page count of this relation
      usage: GAUGE
    - name: reltuples
      description: estimate relation tuples
      usage: GAUGE
    - name: relage
      description: age of non-index relation
      usage: GAUGE
    - name: relsize
      description: size of this relation
      usage: GAUGE
  status: enable
  ttl: 5
  timeout: 3
  public: true


pg_table:
  name: pg_table
  desc: PostgreSQL table statistics, db level, normal version
  query:
    - name: pg_table
      sql: |-
          SELECT CURRENT_CATALOG AS datname,psut.schemaname AS nspname,psut.relname,
            seq_scan,seq_tup_read,idx_scan,idx_tup_fetch,(seq_scan + idx_scan) AS tbl_scan,(seq_tup_read + idx_tup_fetch) AS tup_read,
            n_tup_ins,n_tup_upd,n_tup_del,(n_tup_ins + n_tup_upd + n_tup_del) AS n_tup_mod,
            n_tup_hot_upd,n_live_tup,n_dead_tup,
            nvl(last_vacuum::text,'1970-01-01') as last_vacuum,nvl(last_autovacuum::text,'1970-01-01') as last_autovacuum,nvl(last_analyze::text,'1970-01-01') as last_analyze,nvl(last_autoanalyze::text,'1970-01-01') as last_autoanalyze,vacuum_count,autovacuum_count,analyze_count,autoanalyze_count,
            extract(epoch from pg_catalog.now() -(case when nvl(last_vacuum,'1970-01-01')>nvl(last_autovacuum,'1970-01-01') then nvl(last_vacuum,'1970-01-01') else nvl(last_autovacuum,'1970-01-01') end))::int vacuum_delay,
            extract(epoch from pg_catalog.now() -(case when nvl(last_analyze,'1970-01-01')>nvl(last_autoanalyze,'1970-01-01') then nvl(last_analyze,'1970-01-01') else nvl(last_autoanalyze,'1970-01-01') end))::int analyze_delay,
            heap_blks_read,heap_blks_hit,idx_blks_read,idx_blks_hit,
            toast_blks_read,toast_blks_hit,tidx_blks_read,tidx_blks_hit
          FROM pg_stat_user_tables psut,pg_statio_user_tables psio
          WHERE psio.relid = psut.relid and psio.schemaname not in ('pg_catalog', 'information_schema','snapshot', 'dbe_pldeveloper', 'db4ai') and (n_live_tup+n_dead_tup)>10000;
      version: '>=0.0.0'
      timeout: 10
      ttl: 60
      status: enable
      dbRole: "primary"
    - name: pg_table
      sql: |-
          SELECT CURRENT_CATALOG AS datname,psut.schemaname AS nspname,psut.relname,
            seq_scan,seq_tup_read,idx_scan,idx_tup_fetch,(seq_scan + idx_scan) AS tbl_scan,(seq_tup_read + idx_tup_fetch) AS tup_read,
            n_tup_ins,n_tup_upd,n_tup_del,(n_tup_ins + n_tup_upd + n_tup_del) AS n_tup_mod,
            n_tup_hot_upd,n_live_tup,n_dead_tup,
            nvl(last_vacuum::text,'1970-01-01') as last_vacuum,nvl(last_autovacuum::text,'1970-01-01') as last_autovacuum,nvl(last_analyze::text,'1970-01-01') as last_analyze,nvl(last_autoanalyze::text,'1970-01-01') as last_autoanalyze,vacuum_count,autovacuum_count,analyze_count,autoanalyze_count,
            extract(epoch from pg_catalog.now() -(case when nvl(last_vacuum,'1970-01-01')>nvl(last_autovacuum,'1970-01-01') then nvl(last_vacuum,'1970-01-01') else nvl(last_autovacuum,'1970-01-01') end))::int vacuum_delay,
            extract(epoch from pg_catalog.now() -(case when nvl(last_analyze,'1970-01-01')>nvl(last_autoanalyze,'1970-01-01') then nvl(last_analyze,'1970-01-01') else nvl(last_autoanalyze,'1970-01-01') end))::int analyze_delay,
            heap_blks_read,heap_blks_hit,idx_blks_read,idx_blks_hit,
            toast_blks_read,toast_blks_hit,tidx_blks_read,tidx_blks_hit
          FROM pg_stat_user_tables psut,pg_statio_user_tables psio
          WHERE psio.relid = psut.relid and psio.schemaname not in ('pg_catalog', 'information_schema','snapshot', 'dbe_pldeveloper', 'db4ai') and (n_live_tup+n_dead_tup)>10000;
      version: '>=0.0.0'
      timeout: 10
      ttl: 60
      status: disable
      dbRole: "standby"
  metrics:
    - name: datname
      description: database name of this relation
      usage: LABEL
    - name: nspname
      description: schema name of this relation
      usage: LABEL
    - name: relname
      description: relation name of this relation
      usage: LABEL
    - name: seq_scan
      description: sequential scans initiated on this table
      usage: COUNTER
    - name: seq_tup_read
      description: live rows fetched by sequential scans
      usage: COUNTER
    - name: idx_scan
      description: index scans initiated on this table
      usage: COUNTER
    - name: idx_tup_fetch
      description: rows fetched by index scans
      usage: COUNTER
    - name: tbl_scan
      description: total table scan = index scan + seq scan
      usage: COUNTER
    - name: tup_read
      description: total tuples read = index fetch + seq read
      usage: COUNTER
    - name: n_tup_ins
      description: rows inserted
      usage: COUNTER
    - name: n_tup_upd
      description: rows updated
      usage: COUNTER
    - name: n_tup_del
      description: rows deleted
      usage: COUNTER
    - name: n_tup_mod
      description: rows modified (insert + update + delete)
      usage: COUNTER
    - name: n_tup_hot_upd
      description: rows updated in HOT mode
      usage: COUNTER
    - name: n_live_tup
      description: estimated live rows
      usage: GAUGE
    - name: n_dead_tup
      description: estimated dead rows
      usage: GAUGE
    - name: n_mod_since_analyze
      description: rows changed since last analyze
      usage: GAUGE
    - name: last_vacuum
      description: when table was manually vacuumed last time (FULL not count)
      usage: LABEL
    - name: last_autovacuum
      description: when table was automatically vacuumed last time
      usage: LABEL
    - name: last_analyze
      description: when table was manually analyzed last time
      usage: LABEL
    - name: last_autoanalyze
      description: when table was automatically analyzed last time
      usage: LABEL
    - name: vacuum_delay
      description: delay from last vacuum time
      usage: GAUGE
    - name: analyze_delay
      description: delay from last  analyze time
      usage: GAUGE
    - name: vacuum_count
      description: manual vacuum count (FULL not count)
      usage: COUNTER
    - name: autovacuum_count
      description: automatic vacuum count
      usage: COUNTER
    - name: analyze_count
      description: manual analyze count
      usage: COUNTER
    - name: autoanalyze_count
      description: automatic analyze count
      usage: COUNTER
    - name: heap_blks_read
      description: relation heap read
      usage: COUNTER
    - name: heap_blks_hit
      description: relation heap hit
      usage: COUNTER
    - name: idx_blks_read
      description: index read
      usage: COUNTER
    - name: idx_blks_hit
      description: index hit
      usage: COUNTER
    - name: toast_blks_read
      description: toast heap read
      usage: COUNTER
    - name: toast_blks_hit
      description: toast heap hit
      usage: COUNTER
    - name: tidx_blks_read
      description: toast index read
      usage: COUNTER
    - name: tidx_blks_hit
      description: toast index hit
      usage: COUNTER
  status: enable
  ttl: 60
  timeout: 10



pg_index:
  name: pg_index
  desc: opengauss index statistics, db level, normal version
  query:
    - name: pg_index
      sql: |-
          SELECT CURRENT_CATALOG AS datname,psui.schemaname AS nspname,psui.relname AS tablename,psui.indexrelname AS relname, pg_get_indexdef(psui.indexrelid) AS indexdef,
          idx_scan, idx_tup_read,idx_tup_fetch,idx_blks_read,idx_blks_hit
          FROM pg_stat_user_indexes psui,pg_statio_user_indexes psio
          WHERE psio.indexrelid = psui.indexrelid and psui.schemaname not in ('pg_catalog', 'information_schema','snapshot', 'dbe_pldeveloper', 'db4ai')
          order by idx_scan desc limit 100;
      version: '>=0.0.0'
      timeout: 10
      ttl: 3600
      dbRole: "primary"
      status: enable
    - name: pg_index
      sql: |-
          SELECT CURRENT_CATALOG AS datname,psui.schemaname AS nspname,psui.relname AS tablename,psui.indexrelname AS relname, pg_get_indexdef(psui.indexrelid) AS indexdef,
          idx_scan,idx_tup_read,idx_tup_fetch,idx_blks_read,idx_blks_hit
          FROM pg_stat_user_indexes psui,pg_statio_user_indexes psio
          WHERE psio.indexrelid = psui.indexrelid and psui.schemaname not in ('pg_catalog', 'information_schema','snapshot', 'dbe_pldeveloper', 'db4ai')
          order by idx_scan desc limit 100;
      version: '>=0.0.0'
      timeout: 10
      ttl: 3600
      dbRole: "standby"
      status: disable
  metrics:
    - name: datname
      description: database name of this relation
      usage: LABEL
    - name: nspname
      description: schema name of this relation
      usage: LABEL
    - name: tablename
      description: relation name of this relation
      usage: LABEL
    - name: relname
      description: index name of this relation
      usage: LABEL
    - name: indexdef
      description: index definition of this relation
      usage: LABEL
    - name: idx_scan
      description: index scans initiated on this index
      usage: GAUGE
    - name: idx_tup_read
      description: index entries returned by scans on this index
      usage: COUNTER
    - name: idx_tup_fetch
      description: live table rows fetched by simple index scans using this index
      usage: COUNTER
    - name: idx_blks_read
      description: blocks been read from disk of this index
      usage: COUNTER
    - name: idx_blks_hit
      description: blocks hit from cache of this index
      usage: COUNTER
  status: enable
  ttl: 10
  timeout: 1



pg_tables_size:
  name: pg_tables_size
  desc: OpenGauss tables size
  query:
    - name: pg_tables_size
      sql: |-
          SELECT CURRENT_CATALOG AS datname,nsp.nspname,rel.relname,
             pg_catalog.pg_total_relation_size(rel.oid)       AS bytes,
             pg_catalog.pg_relation_size(rel.oid)             AS relsize,
             pg_catalog.pg_indexes_size(rel.oid)              AS indexsize,
             pg_catalog.pg_total_relation_size(reltoastrelid) AS toastsize
          FROM pg_namespace nsp JOIN pg_class rel ON nsp.oid = rel.relnamespace
          WHERE nspname NOT IN ('pg_catalog', 'information_schema','snapshot', 'dbe_pldeveloper', 'db4ai') AND rel.relkind = 'r'
          order by 4 desc limit 100;
      version: '>=0.0.0'
      timeout: 10
      ttl: 3600
      dbRole: "primary"
      status: enable
    - name: pg_tables_size
      sql: |-
          SELECT CURRENT_CATALOG AS datname,nsp.nspname,rel.relname,
             pg_catalog.pg_total_relation_size(rel.oid)       AS bytes,
             pg_catalog.pg_relation_size(rel.oid)             AS relsize,
             pg_catalog.pg_indexes_size(rel.oid)              AS indexsize,
             pg_catalog.pg_total_relation_size(reltoastrelid) AS toastsize
          FROM pg_namespace nsp JOIN pg_class rel ON nsp.oid = rel.relnamespace
          WHERE nspname NOT IN ('pg_catalog', 'information_schema','snapshot', 'dbe_pldeveloper', 'db4ai') AND rel.relkind = 'r'
          order by 4 desc limit 100;
      version: '>=0.0.0'
      timeout: 10
      ttl: 3600
      dbRole: "standby"
      status: disable
  metrics:
    - name: datname
      description: database name of this relation
      usage: LABEL
    - name: nspname
      description: schema name of this relation
      usage: LABEL
    - name: relname
      description: relation name of this relation
      usage: LABEL
    - name: bytes
      description: total size of this table (including toast, index, toast index)
      usage: GAUGE
    - name: relsize
      description: size of this table itself (main, vm, fsm)
      usage: GAUGE
    - name: indexsize
      description:  size of all related indexes
      usage: GAUGE
    - name: toastsize
      description:  size of corresponding toast tables
      usage: GAUGE
  status: enable
  ttl: 3600
  timeout: 10


pg_indexes_size:
  name: pg_indexes_size
  desc: OpenGauss database indexes size
  query:
    - name: pg_indexes_size
      sql: |-
        select schemaname schema_name,relname table_name,indexrelname index_name,pg_catalog.pg_table_size(indexrelid) as index_size
        from pg_stat_user_indexes
        where schemaname not in('pg_catalog', 'information_schema','snapshot', 'dbe_pldeveloper', 'db4ai')
        order by 4 desc limit 100;
      version: '>=0.0.0'
      timeout: 10
      ttl: 3600
      dbRole: "primary"
      status: disable
    - name: pg_indexes_size
      sql: |-
        select schemaname schema_name,relname table_name,indexrelname index_name,pg_catalog.pg_table_size(indexrelid) as index_size
        from pg_stat_user_indexes
        where schemaname not in('pg_catalog', 'information_schema','snapshot', 'dbe_pldeveloper', 'db4ai')
        order by 4 desc limit 100;
      version: '>=0.0.0'
      timeout: 10
      ttl: 3600
      dbRole: "standby"
      status: disable
  metrics:
  - name: schema_name
    description: Schema name of index
    usage: LABEL
  - name: table_name
    description: Table name of index
    usage: LABEL
  - name: index_name
    description: Name of index
    usage: LABEL
  - name: index_size
    description: Size of index
    usage: GAUGE
  status: enable
  ttl: 3600
  timeout: 10



pg_need_indexes:
  name: pg_need_indexes
  desc: OpenGauss tables need indexes
  query:
    - name: pg_need_indexes
      sql: |-
        select schemaname||'.'||relname as tablename, pg_catalog.pg_size_pretty(pg_catalog.pg_table_size(relid)) as table_size, seq_scan, seq_tup_read, coalesce(idx_scan,0) idx_scan, coalesce(idx_tup_fetch,0) idx_tup_fetch,coalesce((idx_scan/(case when (seq_scan+idx_scan) >0 then (seq_scan+idx_scan) else 1 end) * 100),0) as rate
        from pg_stat_user_tables
        where schemaname not in('pg_catalog', 'information_schema','snapshot', 'dbe_pldeveloper', 'db4ai') and pg_catalog.pg_table_size(relid) > 1024*1024*1024 and coalesce((idx_scan/(case when (seq_scan+idx_scan) >0 then (seq_scan+idx_scan) else 1 end) * 100),0) < 90
        order by seq_scan desc limit 10;
      version: '>=0.0.0'
      timeout: 10
      ttl: 3600
      dbRole: "primary"
      status: enable
    - name: pg_need_indexes
      sql: |-
        select schemaname||'.'||relname as tablename, pg_catalog.pg_size_pretty(pg_catalog.pg_table_size(relid)) as table_size, seq_scan, seq_tup_read, coalesce(idx_scan,0) idx_scan, coalesce(idx_tup_fetch,0) idx_tup_fetch,coalesce((idx_scan/(case when (seq_scan+idx_scan) >0 then (seq_scan+idx_scan) else 1 end) * 100),0) as rate
        from pg_stat_user_tables
        where schemaname not in('pg_catalog', 'information_schema','snapshot', 'dbe_pldeveloper', 'db4ai') and pg_catalog.pg_table_size(relid) > 1024*1024*1024 and coalesce((idx_scan/(case when (seq_scan+idx_scan) >0 then (seq_scan+idx_scan) else 1 end) * 100),0) < 90
        order by seq_scan desc limit 10;
      version: '>=0.0.0'
      timeout: 10
      ttl: 3600
      dbRole: "standby"
      status: disable
  metrics:
    - name: tablename
      description: Name of table
      usage: LABEL
    - name: table_size
      description: Size of table
      usage: LABEL
    - name: seq_scan
      description: Scan numbers of seq
      usage: GAUGE
    - name: seq_tup_read
      description: Tup read numbers of seq
      usage: GAUGE
    - name: idx_scan
      description: Scan numbers of indexes
      usage: GAUGE
    - name: idx_tup_fetch
      description: Tup fetch numbers of indexes
      usage: GAUGE
    - name: rate
      description: Index used rate
      usage: GAUGE
  status: enable
  ttl: 3600
  timeout: 10




pg_never_used_indexes:
  name: pg_never_used_indexes
  desc: OpenGauss indexes never used
  query:
    - name: pg_never_used_indexes
      sql: |-
        select CURRENT_CATALOG as datname, pi.schemaname, pi.relname, pi.indexrelname, pg_catalog.pg_table_size(pi.indexrelid) as index_size
        from pg_indexes pis
        join pg_stat_user_indexes pi
        on pis.schemaname = pi.schemaname and pis.tablename = pi.relname and pis.indexname = pi.indexrelname
        left join pg_constraint pco
        on pco.conname = pi.indexrelname and pco.conrelid = pi.relid
        where pco.contype is distinct from 'p' and pco.contype is distinct from 'u'
        and (idx_scan,idx_tup_read,idx_tup_fetch) = (0,0,0)
        and pis.indexdef !~ ' UNIQUE INDEX '
        and pis.schemaname not in('pg_catalog', 'information_schema','snapshot', 'dbe_pldeveloper', 'db4ai')
        order by pg_catalog.pg_table_size(indexrelid) desc;
      version: '>=0.0.0'
      timeout: 10
      ttl: 3600
      dbRole: "primary"
      status: enable
    - name: pg_never_used_indexes
      sql: |-
        select CURRENT_CATALOG as datname, pi.schemaname, pi.relname, pi.indexrelname, pg_catalog.pg_table_size(pi.indexrelid) as index_size
        from pg_indexes pis
        join pg_stat_user_indexes pi
        on pis.schemaname = pi.schemaname and pis.tablename = pi.relname and pis.indexname = pi.indexrelname
        left join pg_constraint pco
        on pco.conname = pi.indexrelname and pco.conrelid = pi.relid
        where pco.contype is distinct from 'p' and pco.contype is distinct from 'u'
        and (idx_scan,idx_tup_read,idx_tup_fetch) = (0,0,0)
        and pis.indexdef !~ ' UNIQUE INDEX '
        and pis.schemaname not in('pg_catalog', 'information_schema','snapshot', 'dbe_pldeveloper', 'db4ai')
        order by pg_catalog.pg_table_size(indexrelid) desc;
      version: '>=0.0.0'
      timeout: 10
      ttl: 3600
      dbRole: "standby"
      status: disable
  metrics:
    - name: datname
      description: database of table
      usage: LABEL
    - name: schemaname
      description: Schema of table
      usage: LABEL
    - name: relname
      description: Name of table
      usage: LABEL
    - name: indexrelname
      description: Name of index
      usage: LABEL
    - name: index_size
      description: Size of index
      usage: GAUGE
  status: enable
  ttl: 3600
  timeout: 10



pg_tables_structure:
  name: pg_tables_structure
  desc: OpenGauss database tables stucture
  query:
    - name: pg_tables_structure
      sql: |-
        select t1.*, t2.column_number from (select CURRENT_CATALOG as datname, schemaname,relname,n_live_tup,n_dead_tup,round(n_dead_tup/(n_live_tup+1),2) as dead_rate,
        last_vacuum, last_autovacuum, last_analyze, last_autoanalyze, vacuum_count,autovacuum_count,analyze_count,autoanalyze_count
        from pg_stat_user_tables where n_live_tup > 0 and schemaname not in ('information_schema', 'pg_catalog', 'snapshot', 'dbe_pldeveloper', 'db4ai') order by 5 asc) t1 join
        (select table_schema, table_name, count(column_name) as column_number from information_schema.columns group by table_schema, table_name)
        t2 on t1.schemaname=t2.table_schema and t1.relname=t2.table_name;
      version: '>=0.0.0'
      timeout: 1
      status: enable
  metrics:
    - name: datname
      description: database name of table
      usage: LABEL
    - name: schemaname
      description: Schema name of table
      usage: LABEL
    - name: relname
      description: Table name of table
      usage: LABEL
    - name: n_live_tup
      description: live tup of table
      usage: GAUGE
    - name: n_dead_tup
      description: dead tup of table
      usage: GAUGE
    - name: column_number
      description: column number of table
      usage: GAUGE
    - name: dead_rate
      description: Dead rate of table
      usage: GAUGE
    - name: last_vacuum
      description: dead tup of table
      usage: GAUGE
    - name: last_autovacuum
      description: dead tup of table
      usage: GAUGE
    - name: last_analyze
      description: dead tup of table
      usage: GAUGE
    - name: last_autoanalyze
      description: dead tup of table
      usage: GAUGE
    - name: vacuum_count
      description: count of vacuum
      usage: GAUGE
    - name: autovacuum_count
      description: Count of autovacuum
      usage: GAUGE
    - name: analyze_count
      description: Count of analyze
      usage: GAUGE
    - name: autoanalyze_count
      description: Count of autoanalyze
      usage: GAUGE
  status: enable
  ttl: 60
  timeout: 1



